name: Build LaTeX/Typst document and Create Release
on:
  workflow_call:
    inputs:
      cluttex_parallel:
        description: "Whether to compile LaTeX documents using GNU parallel"
        default: true
        type: boolean
        required: false
      cluttex:
        description: "Whether to compile LaTeX documents using ClutTex"
        default: false
        type: boolean
        required: false
      latexmk:
        description: "Whether to compile LaTeX documents using LaTeXmk"
        default: false
        type: boolean
        required: false
      typst:
        description: "Whether to compile Typst files"
        default: true
        type: boolean
        required: false
      upload_artifact:
        description: "Whether to upload PDF files as artifacts"
        default: true
        type: boolean
        required: false
      upload_release:
        description: "Whether to create a release"
        default: true
        type: boolean
        required: false
      fonts:
        description: "Additional Google Fonts to install"
        default: ""
        type: string
        required: false
      runs-on: # https://github.com/orgs/community/discussions/26801
        description: "Runner to use"
        type: string
        default: '["ubuntu-latest"]'
        required: false
    secrets:
      gh_pat:
        description: "GitHub Personal Access Token for creating releases"
        required: false

jobs:
  main:
    name: Main
    runs-on: ${{fromJSON(inputs.runs-on)}}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Compile LaTeX document (LaTeXmk)
        if: ${{ inputs.latexmk }}
        uses: xu-cheng/latex-action@v3
        with:
          root_file: "**/*.tex"
          latexmk_use_xelatex: true
      - name: Install additional fonts
        # copy fonts to current directory from ~/.local/share/fonts/gfont as well
        if: ${{ inputs.fonts }}
        run: |
          pipx install "git+https://github.com/nureon22/gfont.git"
          gfont install ${{ inputs.fonts }} -y
          mkdir -p fonts
          cp -r ~/.local/share/fonts/gfont fonts
      # runs on docker image
      # clutex: https://github.com/minoki/cluttex
      - name: Compile LaTeX document (ClutTex)
        if: ${{ inputs.cluttex && !inputs.cluttex_parallel }}
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: find . -name "*.tex" -exec sh -c 'cd $(dirname {}) && cluttex --no-halt-on-error --no-file-line-error -e xelatex $(basename {})' \;
      - name: Compile LaTeX document (ClutTex with GNU parallel)
        if: ${{ inputs.cluttex_parallel }}
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            apk add parallel
            find . -name "*.tex" | parallel "cd $(dirname {}) && cluttex --no-halt-on-error --no-file-line-error -e xelatex $(basename {})"
      - name: Search all .typ files recursively and output as space separated string
        if: ${{ always() && inputs.typst }}
        id: search_typ_files
        run: |
          echo "typ_files=$(find . -name '*.typ' -type f | tr '\n' ' ')" >> $GITHUB_OUTPUT
      - name: Compile Typst Files
        if: ${{ inputs.typst }}
        uses: ammar-ahmed22/compile-typst-action@v1
        with:
          fonts_path: "fonts"
          source_paths: ${{ steps.search_typ_files.outputs.typ_files }}
      - name: Upload (Artifact)
        if: ${{ inputs.upload_artifact }}
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: "**/*.pdf"
      - name: Comment artifact link
        if: ${{ inputs.upload_artifact && github.ref != 'refs/heads/main' }}
        id: comment-artifact
        run: |
          gh pr comment "${{ github.head_ref || github.ref_name }}" --edit-last -b "(Automated) [Compiled PDF files are available](${{ steps.upload-artifact.outputs.artifact-url }})." || gh pr comment "${{ github.head_ref || github.ref_name }}" -b "(Automated) [Compiled PDF files are available](${{ steps.upload-artifact.outputs.artifact-url }})."
        env:
          GITHUB_TOKEN: ${{ secrets.gh_pat }}
      - name: Set up Git user
        if: ${{ inputs.upload_release && github.ref == 'refs/heads/main' }}
        uses: fregante/setup-git-user@v2
      - name: Upload (Release)
        if: ${{ inputs.upload_release && github.ref == 'refs/heads/main' }}
        run: |
          # specifying filenames in `gh release create` didn't work
          gh release create v${{ github.run_number }} --title "Release v${{ github.run_number }}" --notes "Release v${{ github.run_number }}"
          find . -name "*.pdf" -type f -exec gh release upload v${{ github.run_number }} {} --clobber \;
        env:
          GITHUB_TOKEN: ${{ secrets.gh_pat }}
