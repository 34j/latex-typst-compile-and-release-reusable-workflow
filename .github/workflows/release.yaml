name: Build LaTeX/Typst document and Create Release
on:
  workflow_call:
    inputs:
      parallel:
        description: "Whether to compile LaTeX documents using GNU parallel"
        default: true
        type: boolean
        required: false
      cluttex:
        description: "Whether to compile LaTeX documents using ClutTex instead of LaTeXmk"
        default: true
        type: boolean
        required: false
      typst:
        description: "Whether to compile Typst files"
        default: true
        type: boolean
        required: false
      upload_artifact:
        description: "Whether to upload PDF files as artifacts"
        default: true
        type: boolean
        required: false
      upload_release:
        description: "Whether to create a release"
        default: true
        type: boolean
        required: false
    secrets:
      github_token:
        description: "GitHub Personal Access Token for creating releases"
        required: false

jobs:
  main:
    name: Build LaTeX/Typst document and Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Compile LaTeX document (LaTeXmk)
        if: ${{ !github.event.inputs.cluttex }}
        uses: xu-cheng/latex-action@v3
        with:
          root_file: "**/*.tex"
          latexmk_use_xelatex: true
      # runs on docker image
      # clutex: https://github.com/minoki/cluttex
      - name: Compile LaTeX document (ClutTex)
        if: ${{ github.event.inputs.cluttex && !github.event.inputs.parallel }}
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: find . -name "*.tex" -exec sh -c 'cd $(dirname {}) && cluttex --no-halt-on-error --no-file-line-error -e xelatex $(basename {})' \;
      - name: Compile LaTeX document (ClutTex with GNU parallel)
        if: ${{ github.event.inputs.cluttex && github.event.inputs.parallel }}
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            apk add parallel
            find . -name "*.tex" | parallel "cd $(dirname {}) && cluttex --no-halt-on-error --no-file-line-error -e xelatex $(basename {})"
      - name: Search all .typ files recursively and output as space separated string
        if: ${{ github.event.inputs.typst }}
        id: search_typ_files
        run: |
          echo "typ_files=$(find . -name '*.typ' -type f | tr '\n' ' ')" >> $GITHUB_OUTPUT
      - name: Compile Typst Files
        if: ${{ github.event.inputs.typst }}
        uses: ammar-ahmed22/compile-typst-action@v1
        with:
          source_paths: ${{ steps.search_typ_files.outputs.typ_files }}
      - name: Upload PDF file
        if: ${{ github.event.inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: "**/*.pdf"
      - name: Set up Git user
        if: ${{ github.event.inputs.upload_release }}
        uses: fregante/setup-git-user@v2
      - name: Create Release
        if: ${{ github.event.inputs.upload_release }}
        run: |
          # specifying filenames in `gh release create` didn't work
          gh release create v${{ github.run_number }} --title "Release v${{ github.run_number }}" --notes "Release v${{ github.run_number }}"
          find . -name "*.pdf" -type f -exec gh release upload v${{ github.run_number }} {} --clobber \;
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
